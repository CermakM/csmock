#!/bin/sh
SELF="$0"

test -z "$TMPDIR" && TMPDIR="/tmp"

OPTS=i

usage(){
    echo "Usage: $SELF [-$OPTS] MOCK_PROFILE my-package.src.rpm"
    exit 1
}

COV_MOCKBUILD_ARGS=

while getopts $OPTS opt; do
    case "$opt" in
        i)
            KEEP_COV=yes
            ;;

        *)
            usage
            ;;
    esac
done
shift $(($OPTIND - 1))

# the second operand is the SRPM to build/analyze
COV_MOCKBUILD_ARGS="$COV_MOCKBUILD_ARGS $1"
SRPM="`readlink -f "$2"`"
test -f "$SRPM" || usage

BASE="`basename "$SRPM" .src.rpm`"
COV="$BASE.cov"
LOG="$BASE.log"
OUT="$BASE.out"
ERR="$BASE.err"
TGZ="$BASE.tar.lzma"

die(){
    if test -n "$1"; then
        echo "$SELF: error: $1" >&2
    else
        echo "$SELF: generic error" >&2
    fi
    exit 1
}

# look for cov-mockbuild
TOP="`dirname "$SELF"`"
COV_MOCKBUILD="`readlink -f "$TOP/cov-mockbuild"`"
test -x "$COV_MOCKBUILD" || die "cov-mockbuild not found"

# create the directory for results in $TMPDIR
TMP="`mktemp -d $TMPDIR/cov-diffbuild.XXXXXX`"
RESULTS_DIR="$TMP/$BASE"
mkdir -p "$RESULTS_DIR/run0" "$RESULTS_DIR/run1"
test -d "$RESULTS_DIR" || die "mktemp failed"

export KEEP_COV

write_logs_to(){
    grep -v "^|" "$OUT" | grep -v "^\*" > "$1/$OUT"
    sed 's|^/builddir/build/BUILD/||' "$ERR" > "$1/$ERR"
    rm -rf "$OUT" "$ERR"

    if test xyes = "x$KEEP_COV"; then
        mv "$COV" "$1/"
    else
        rm -rf "$COV"
    fi

    mv -v "$LOG" "$1/"
}

# build the package without patches
(cd "$RESULTS_DIR" || die
    "$COV_MOCKBUILD" -x $COV_MOCKBUILD_ARGS "$SRPM" || touch run0.FAILED
    write_logs_to "run0")

# build the package with patches
(cd "$RESULTS_DIR" || die
    "$COV_MOCKBUILD" $COV_MOCKBUILD_ARGS "$SRPM" || touch run1.FAILED
    write_logs_to "run1")

# compare both defect lists
(cd "$RESULTS_DIR" || die
    (csdiff "run0/$ERR" "run1/$ERR" || touch ./diff.FAILED) \
        | tee ./defects-in-patches.err)

tar -cv -C "$TMP" "$BASE" | lzma -c > "$TGZ"
rm -rf "$TMP"
